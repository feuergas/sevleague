{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leoga\\\\Documents\\\\Computer Science\\\\sevleague\\\\src\\\\components\\\\ProblemCard\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Badge } from \"react-bootstrap\";\nimport CardList from \"../CardList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'https://gasmatematica.altervista.org/beta/api';\nconst ProblemCard = _ref => {\n  _s();\n  let {\n    number\n  } = _ref;\n  if (!number) number = 10;\n  const [problems, setProblems] = useState([]);\n  const [displayProblems, setDisplayProblems] = useState([]);\n  const getProblems = async number => {\n    const response = await fetch(`${BASE_URL}/problemset.php?n=${number}`);\n    const data = await response.json();\n    setProblems(data);\n  };\n  useEffect(() => {\n    getProblems(number);\n  }, [number]);\n  useEffect(() => {\n    setDisplayProblems(problems.map(problem => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Badge, {\n        bg: \"secondary\",\n        className: \"text-monospace me-2\",\n        children: `#${problem.id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-monospace\",\n        children: problem.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)));\n  }, [problems]);\n  return /*#__PURE__*/_jsxDEV(CardList, {\n    title: \"Problems\",\n    data: displayProblems,\n    action: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(ProblemCard, \"JniLZpMGvTpxX25lCdxCXcjHTHI=\");\n_c = ProblemCard;\nexport default ProblemCard;\nvar _c;\n$RefreshReg$(_c, \"ProblemCard\");","map":{"version":3,"names":["useEffect","useState","Badge","CardList","jsxDEV","_jsxDEV","Fragment","_Fragment","BASE_URL","ProblemCard","_ref","_s","number","problems","setProblems","displayProblems","setDisplayProblems","getProblems","response","fetch","data","json","map","problem","children","bg","className","id","fileName","_jsxFileName","lineNumber","columnNumber","name","title","action","_c","$RefreshReg$"],"sources":["C:/Users/leoga/Documents/Computer Science/sevleague/src/components/ProblemCard/index.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport CardList from \"../CardList\";\r\n\r\nconst BASE_URL = 'https://gasmatematica.altervista.org/beta/api';\r\n\r\nconst ProblemCard = ({ number }) => {\r\n\r\n    if (!number) number = 10;\r\n\r\n    const [problems, setProblems] = useState([]);\r\n    const [displayProblems, setDisplayProblems] = useState([]);\r\n\r\n    const getProblems = async (number) => {\r\n        const response = await fetch(`${BASE_URL}/problemset.php?n=${number}`);\r\n        const data = await response.json();\r\n        setProblems(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProblems(number);\r\n    }, [number]);\r\n\r\n    useEffect(() => {\r\n        setDisplayProblems(\r\n            problems.map((problem) => (\r\n                <>\r\n                    <Badge bg=\"secondary\" className=\"text-monospace me-2\">{`#${problem.id}`}</Badge>\r\n                    <span className=\"text-monospace\">{problem.name}</span>\r\n                </>\r\n            ))\r\n        );\r\n    }, [problems])\r\n\r\n    return (\r\n        <CardList title=\"Problems\" data={displayProblems} action={true} />\r\n    );\r\n}\r\n\r\nexport default ProblemCard;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,KAAK,QAAQ,iBAAiB;AACvC,OAAOC,QAAQ,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,QAAQ,GAAG,+CAA+C;AAEhE,MAAMC,WAAW,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAE3B,IAAI,CAACE,MAAM,EAAEA,MAAM,GAAG,EAAE;EAExB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMgB,WAAW,GAAG,MAAOL,MAAM,IAAK;IAClC,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEX,QAAS,qBAAoBI,MAAO,EAAC,CAAC;IACtE,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClCP,WAAW,CAACM,IAAI,CAAC;EACrB,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACZiB,WAAW,CAACL,MAAM,CAAC;EACvB,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZZ,SAAS,CAAC,MAAM;IACZgB,kBAAkB,CACdH,QAAQ,CAACS,GAAG,CAAEC,OAAO,iBACjBlB,OAAA,CAAAE,SAAA;MAAAiB,QAAA,gBACInB,OAAA,CAACH,KAAK;QAACuB,EAAE,EAAC,WAAW;QAACC,SAAS,EAAC,qBAAqB;QAAAF,QAAA,EAAG,IAAGD,OAAO,CAACI,EAAG;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAChF1B,OAAA;QAAMqB,SAAS,EAAC,gBAAgB;QAAAF,QAAA,EAAED,OAAO,CAACS;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ;IAAA,gBAE7D,CAAC,CACL;EACL,CAAC,EAAE,CAAClB,QAAQ,CAAC,CAAC;EAEd,oBACIR,OAAA,CAACF,QAAQ;IAAC8B,KAAK,EAAC,UAAU;IAACb,IAAI,EAAEL,eAAgB;IAACmB,MAAM,EAAE;EAAK;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAE1E,CAAC;AAAApB,EAAA,CA/BKF,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAiCjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}