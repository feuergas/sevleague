{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leoga\\\\Documents\\\\Computer Science\\\\sevleague\\\\src\\\\components\\\\ActiveContestCard\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Badge } from \"react-bootstrap\";\nimport CardList from \"../CardList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'https://gasmatematica.altervista.org/beta/api';\nconst ActiveContestCard = _ref => {\n  _s();\n  let {\n    number\n  } = _ref;\n  if (!number) number = 10;\n  const [contests, setContests] = useState([]);\n  const [displayContests, setDisplayContests] = useState([]);\n  const getActiveContests = async number => {\n    const response = await fetch(`${BASE_URL}/activecontests.php?n=${number}`);\n    const data = await response.json();\n    setContests(data);\n  };\n  useEffect(() => {\n    getActiveContests(number);\n  }, [number]);\n  useEffect(() => {\n    setDisplayContests(contests.map(contest => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Badge, {\n        bg: \"primary\",\n        className: \"font-monospace me-2\",\n        children: `#${String(contest.id).padStart(3, '0')}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), contest.name]\n    }, void 0, true)));\n  }, [contests]);\n  return displayContests.length > 0 ? /*#__PURE__*/_jsxDEV(CardList, {\n    title: \"Active Contests\",\n    data: displayContests,\n    action: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(CardList, {\n    title: \"Active Contests\",\n    data: ['No active contests right now.'],\n    action: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }, this);\n};\n_s(ActiveContestCard, \"TX4o9Zo471FE8T29PZqdJHnO808=\");\n_c = ActiveContestCard;\nexport default ActiveContestCard;\nvar _c;\n$RefreshReg$(_c, \"ActiveContestCard\");","map":{"version":3,"names":["useEffect","useState","Badge","CardList","jsxDEV","_jsxDEV","Fragment","_Fragment","BASE_URL","ActiveContestCard","_ref","_s","number","contests","setContests","displayContests","setDisplayContests","getActiveContests","response","fetch","data","json","map","contest","children","bg","className","String","id","padStart","fileName","_jsxFileName","lineNumber","columnNumber","name","length","title","action","_c","$RefreshReg$"],"sources":["C:/Users/leoga/Documents/Computer Science/sevleague/src/components/ActiveContestCard/index.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport CardList from \"../CardList\";\r\n\r\nconst BASE_URL = 'https://gasmatematica.altervista.org/beta/api';\r\n\r\nconst ActiveContestCard = ({ number }) => {\r\n\r\n    if (!number) number = 10;\r\n\r\n    const [contests, setContests] = useState([]);\r\n    const [displayContests, setDisplayContests] = useState([]);\r\n\r\n    const getActiveContests = async (number) => {\r\n        const response = await fetch(`${BASE_URL}/activecontests.php?n=${number}`);\r\n        const data = await response.json();\r\n        setContests(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getActiveContests(number);\r\n    }, [number]);\r\n\r\n    useEffect(() => {\r\n        setDisplayContests(\r\n            contests.map((contest) => (\r\n                <>\r\n                    <Badge bg=\"primary\" className=\"font-monospace me-2\">{`#${String(contest.id).padStart(3, '0')}`}</Badge>\r\n                    {contest.name}\r\n                </>\r\n            ))\r\n        );\r\n    }, [contests])\r\n\r\n    return (\r\n        displayContests.length > 0 ? (\r\n            <CardList title=\"Active Contests\" data={displayContests} action={true} />\r\n        ) : (\r\n            <CardList title=\"Active Contests\" data={['No active contests right now.']} action={false} />\r\n        )\r\n    );\r\n};\r\n\r\nexport default ActiveContestCard;\r\n\r\n\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,KAAK,QAAQ,iBAAiB;AACvC,OAAOC,QAAQ,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,QAAQ,GAAG,+CAA+C;AAEhE,MAAMC,iBAAiB,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAEjC,IAAI,CAACE,MAAM,EAAEA,MAAM,GAAG,EAAE;EAExB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMgB,iBAAiB,GAAG,MAAOL,MAAM,IAAK;IACxC,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEX,QAAS,yBAAwBI,MAAO,EAAC,CAAC;IAC1E,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClCP,WAAW,CAACM,IAAI,CAAC;EACrB,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACZiB,iBAAiB,CAACL,MAAM,CAAC;EAC7B,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZZ,SAAS,CAAC,MAAM;IACZgB,kBAAkB,CACdH,QAAQ,CAACS,GAAG,CAAEC,OAAO,iBACjBlB,OAAA,CAAAE,SAAA;MAAAiB,QAAA,gBACInB,OAAA,CAACH,KAAK;QAACuB,EAAE,EAAC,SAAS;QAACC,SAAS,EAAC,qBAAqB;QAAAF,QAAA,EAAG,IAAGG,MAAM,CAACJ,OAAO,CAACK,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,EACtGV,OAAO,CAACW,IAAI;IAAA,gBAEpB,CAAC,CACL;EACL,CAAC,EAAE,CAACrB,QAAQ,CAAC,CAAC;EAEd,OACIE,eAAe,CAACoB,MAAM,GAAG,CAAC,gBACtB9B,OAAA,CAACF,QAAQ;IAACiC,KAAK,EAAC,iBAAiB;IAAChB,IAAI,EAAEL,eAAgB;IAACsB,MAAM,EAAE;EAAK;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG,gBAEzE5B,OAAA,CAACF,QAAQ;IAACiC,KAAK,EAAC,iBAAiB;IAAChB,IAAI,EAAE,CAAC,+BAA+B,CAAE;IAACiB,MAAM,EAAE;EAAM;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC5F;AAET,CAAC;AAACtB,EAAA,CAnCIF,iBAAiB;AAAA6B,EAAA,GAAjB7B,iBAAiB;AAqCvB,eAAeA,iBAAiB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}