{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/leoga/Documents/Computer Science/sevleague/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/leoga/Documents/Computer Science/sevleague/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/leoga/Documents/Computer Science/sevleague/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import{Badge}from\"react-bootstrap\";import CardList from\"../CardList\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BASE_URL='https://gasmatematica.altervista.org/beta/api';var ProblemCard=function ProblemCard(_ref){var number=_ref.number;if(!number)number=10;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),problems=_useState2[0],setProblems=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),displayProblems=_useState4[0],setDisplayProblems=_useState4[1];var getProblems=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(number){var response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(BASE_URL,\"/problemset.php?n=\").concat(number));case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;setProblems(data);case 7:case\"end\":return _context.stop();}},_callee);}));return function getProblems(_x){return _ref2.apply(this,arguments);};}();useEffect(function(){getProblems(number);},[number]);useEffect(function(){setDisplayProblems(problems.map(function(problem){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Badge,{bg:\"info\",className:\"font-monospace me-2\",children:\"#\".concat(String(problem.id).padStart(3,'0'))}),problem.name]});}));},[problems]);return/*#__PURE__*/_jsx(CardList,{title:\"Problems\",data:displayProblems,action:true});};export default ProblemCard;","map":{"version":3,"names":["useEffect","useState","Badge","CardList","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","BASE_URL","ProblemCard","_ref","number","_useState","_useState2","_slicedToArray","problems","setProblems","_useState3","_useState4","displayProblems","setDisplayProblems","getProblems","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_callee$","_context","prev","next","fetch","concat","sent","json","stop","_x","apply","arguments","map","problem","children","bg","className","String","id","padStart","name","title","action"],"sources":["C:/Users/leoga/Documents/Computer Science/sevleague/src/components/ProblemCard/index.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport CardList from \"../CardList\";\r\n\r\nconst BASE_URL = 'https://gasmatematica.altervista.org/beta/api';\r\n\r\nconst ProblemCard = ({ number }) => {\r\n\r\n    if (!number) number = 10;\r\n\r\n    const [problems, setProblems] = useState([]);\r\n    const [displayProblems, setDisplayProblems] = useState([]);\r\n\r\n    const getProblems = async (number) => {\r\n        const response = await fetch(`${BASE_URL}/problemset.php?n=${number}`);\r\n        const data = await response.json();\r\n        setProblems(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProblems(number);\r\n    }, [number]);\r\n\r\n    useEffect(() => {\r\n        setDisplayProblems(\r\n            problems.map((problem) => (\r\n                <>\r\n                    <Badge bg=\"info\" className=\"font-monospace me-2\">{`#${String(problem.id).padStart(3, '0')}`}</Badge>\r\n                    {problem.name}\r\n                </>\r\n            ))\r\n        );\r\n    }, [problems])\r\n\r\n    return (\r\n        <CardList title=\"Problems\" data={displayProblems} action={true} />\r\n    );\r\n}\r\n\r\nexport default ProblemCard;"],"mappings":"2aAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,KAAK,KAAQ,iBAAiB,CACvC,MAAO,CAAAC,QAAQ,KAAM,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnC,GAAM,CAAAC,QAAQ,CAAG,+CAA+C,CAEhE,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAAC,IAAA,CAAmB,IAAb,CAAAC,MAAM,CAAAD,IAAA,CAANC,MAAM,CAEzB,GAAI,CAACA,MAAM,CAAEA,MAAM,CAAG,EAAE,CAExB,IAAAC,SAAA,CAAgCb,QAAQ,CAAC,EAAE,CAAC,CAAAc,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAArCG,QAAQ,CAAAF,UAAA,IAAEG,WAAW,CAAAH,UAAA,IAC5B,IAAAI,UAAA,CAA8ClB,QAAQ,CAAC,EAAE,CAAC,CAAAmB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAnDE,eAAe,CAAAD,UAAA,IAAEE,kBAAkB,CAAAF,UAAA,IAE1C,GAAM,CAAAG,WAAW,6BAAAC,KAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOf,MAAM,MAAAgB,QAAA,CAAAC,IAAA,QAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SACN,CAAAC,KAAK,IAAAC,MAAA,CAAI3B,QAAQ,uBAAA2B,MAAA,CAAqBxB,MAAM,EAAG,QAAhEgB,QAAQ,CAAAI,QAAA,CAAAK,IAAA,CAAAL,QAAA,CAAAE,IAAA,SACK,CAAAN,QAAQ,CAACU,IAAI,EAAE,QAA5BT,IAAI,CAAAG,QAAA,CAAAK,IAAA,CACVpB,WAAW,CAACY,IAAI,CAAC,CAAC,wBAAAG,QAAA,CAAAO,IAAA,MAAAZ,OAAA,GACrB,kBAJK,CAAAL,WAAWA,CAAAkB,EAAA,SAAAjB,KAAA,CAAAkB,KAAA,MAAAC,SAAA,OAIhB,CAED3C,SAAS,CAAC,UAAM,CACZuB,WAAW,CAACV,MAAM,CAAC,CACvB,CAAC,CAAE,CAACA,MAAM,CAAC,CAAC,CAEZb,SAAS,CAAC,UAAM,CACZsB,kBAAkB,CACdL,QAAQ,CAAC2B,GAAG,CAAC,SAACC,OAAO,qBACjBpC,KAAA,CAAAF,SAAA,EAAAuC,QAAA,eACIzC,IAAA,CAACH,KAAK,EAAC6C,EAAE,CAAC,MAAM,CAACC,SAAS,CAAC,qBAAqB,CAAAF,QAAA,KAAAT,MAAA,CAAMY,MAAM,CAACJ,OAAO,CAACK,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,GAAW,CACnGN,OAAO,CAACO,IAAI,GACd,EACN,CAAC,CACL,CACL,CAAC,CAAE,CAACnC,QAAQ,CAAC,CAAC,CAEd,mBACIZ,IAAA,CAACF,QAAQ,EAACkD,KAAK,CAAC,UAAU,CAACvB,IAAI,CAAET,eAAgB,CAACiC,MAAM,CAAE,IAAK,EAAG,CAE1E,CAAC,CAED,cAAe,CAAA3C,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}